filter {
  if [@metadata][beat] == "heartbeat" {
    # To throttle out false positives and instability,
    # we require multiple DOWN readings in a time window
    # before we commit to alerting.
    #
    # 2 down events in 3 minutes:
    if [monitor][status] == "down" {
      throttle {
        before_count => 2
        after_count => 2
        period => 180
        max_age => 600
        key => "%{[monitor][id]}-down"
        add_tag => "throttle_slack_alert"
      }
    }

    # Restore the previous status
    memcached {
      namespace => "heartbeat-monitor-state"
      get => {
        "monitor/%{[monitor][id]}" => "[@metadata][previous_status]"
      }
    }

    # If the event wasn't throttled, save this new status for the next event
    #
    # This means that a throttled 'down' events don't trigger an up/down
    # transition in the slack output; it's effectively ignored.
    #
    # However, we do still log it, so it'll show up in the Kibana metrics
    # page.
    #
    if "throttle_slack_alert" not in [tags] {
      memcached {
        namespace => "heartbeat-monitor-state"
        set => {
          "[monitor][status]" => "monitor/%{[monitor][id]}"
        }
      }
    }
  }
}
